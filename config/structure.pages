#page 'bc', :use => 'BC', :feed => :bc, :template => 'common/landing-page'

# options
# :defer => true, queue to be processed after other page generation has completed
# :use => Class file under app/pages to use for rendering the page, default is to use the page name for this lookup

# TODO
# :ignore => true, only use this page for structure, Use when only the child page(s) should be processed
# add ability to add custom functions/blocks to the generators to process variables even more. a/k/a Filters
# FEEDS ------------------------------------------------------------------

# feeds({
#   :test => "test-feeds/lotto.xml",
#   :balls => "balls-feeds/maigc.xml"
# })

feed :lotto => "/Users/brodie/projects/oven2/test-feeds/lotto.xml"
feed :lotto2 => "/Users/brodie/projects/oven2/test-feeds/lotto2.xml"

# FILTERS ----------------------------------------------------------------

#filters_path('app/filters')
# use a class that subclasses Oven::Filter
filter :trim, :use => 'TrimFilter'
# just pass in a callable
filter :tolower, :use => lambda {|text| text.downcase}
filter :reverse, :use => lambda {|text| text.reverse}

# GENERATORS -------------------------------------------------------------

generator('kitchen-sink', {
  :feed => :lotto, 
  :template => 'news/news-item',
  :selector => '/WinningNumbers/game', 
  :rules => [
    [:name, 'name/text()'],
    [:drawdate, 'drawDate/text()'],
  ]
})

generator('news-item', :inherits => 'kitchen-sink')

generator('names', {
  :inherits => 'kitchen-sink',
  :template => :none
  #TODO: allow additional variables [merge?]
})

generator('lotto-names', {
  :inherits => 'kitchen-sink',
  :template => :none,
  :feed => :lotto2
})

generator('lotto-items', {
  :inherits => 'kitchen-sink',
  :feed => :lotto2,
  :rules => [
    [:name, 'name/text()', :trim, :tolower, :reverse]
  ]  
})


# PAGES ------------------------------------------------------------------

page '/', defer:true, use:'Static', name:'magic', template:'shared/basic'

news_page_data = {
  :use => 'news',
  :template => 'news/index',
  :generators => ['names', 'news-item'],
  :passthrough => "this string gets passed through the system"
}

page 'news', news_page_data do
  #page 'local', news_page_data
  #page 'national', news_page_data
end

page 'lotto', :template => 'news/index', :generators => ['names', 'news-item']

#dumpfeeds
#dumptree
dumpfilters
dumpgenerators